#include <unistd.h>

#include "unity.h"
#include "config.h"
#include "common.h"
/* #include "macros.h" */

#include "libs7.h"

s7_scheme *s7;
s7_pointer json_read;
s7_pointer toml_read;
s7_pointer mustache_render;

void setUp(void) {
    if (fflush(stdout) == EOF) {
        /* Handle error */
    }
}

void tearDown(void) {
    if (fflush(stdout) == EOF) {
        /* Handle error */
    }
}

/*
  1. read template file
  2. read data file
  3. run mustache:render
 */

void json(void) {
    log_debug("JSON...");
    /* log_debug("cwd: %s", getcwd(NULL,0)); */
    /* s7_pointer lp = s7_load_path(s7); */
    /* TRACE_S7_DUMP("lp", lp); */
    s7_pointer res = s7_load(s7, "test/batch/case001/main.scm");
    if (res == NULL)
        TEST_FAIL_MESSAGE("s7_load failure");


    log_debug("res: %s", s7_string(res));
    (void)res;
}

int main(int argc, char **argv)
{
    s7 = initialize("mst_cjson_interpolation_test", argc, argv);

    libs7_load_clib(s7, "mustachios");
    libs7_load_clib(s7, "toml");
    libs7_load_clib(s7, "json");

    json_read = s7_name_to_value(s7, "json:read");
    toml_read = s7_name_to_value(s7, "toml:read");
    mustache_render = s7_name_to_value(s7, "mustache:render");

    UNITY_BEGIN();

    RUN_TEST(json);
    /* RUN_TEST(scm); */
    /* RUN_TEST(toml); */

    int rc = UNITY_END();
    if (fflush(stdout) == EOF) {
        /* Handle error */
    }
    return rc;
}
