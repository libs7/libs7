load("@rules_cc//cc:defs.bzl", "cc_library")

cc_test(
    name = "test",
    srcs = ["s7_test.c" ] + select({
        "//config/clibs/link:shared?": [
            # "If a rule's name is in the srcs, then this rule
            # automatically depends on that one. If the named rule's
            # outs are C or C++ source files, they are compiled into
            # this rule; if they are library files, they are linked
            # in."
            "//lib/libc:c_s7", "//lib/libc:libc_s7.h",
            "//lib/shared:dl_s7", "//lib:libdl_s7.h",
            "//lib/shared:m_s7", "//lib:libm_s7.h",
            "//lib/shared:cwalk_s7", "//lib:libcwalk_s7.h"
        ],
        "//conditions:default": []
    }),
    data = [
        "s7_test.c"             # for test_cwalk realpath test case
    ] +select({
        "//config/clibs/link:runtime?": [
            "//lib/libc:c_s7",
            "//lib/shared:dl_s7",
            "//lib/shared:m_s7",
            "//lib/shared:cwalk_s7",
        ],
        "//conditions:default": []
    }),
    deps = [
        ## "other libraries to be linked in to the binary target." can
        ## be cc_library targets but cc_binary targets with
        ## linkshared=1 won't work - put them in srcs (or data) attr.
        "//src:s7",
        "//vendored/gopt",
        "//vendored/logc",
        "//vendored/unity",
        "//vendored/uthash",
    ] + select({
        "//config/clibs/link:static?": [
            "//lib/libc:c_s7_static",
            "//lib/static:dl_s7",
            "//lib/static:m_s7",
            "//lib/static:cwalk_s7",
        ],
        "//conditions:default": []
    }),
    copts = [
        "-x", "c",
        "-Wall",
        "-Wextra",
        "-Werror=pedantic",
        "-Wno-unused-parameter",
        "-Wno-format-pedantic",

        "-Isrc",
        "-Iexternal/libs7/src",

        "-I$(GENDIR)/lib",
        "-I$(GENDIR)/external/libs7/lib",

        "-Ivendored/gopt",
        "-Iexternal/libs7/vendored/gopt",

        "-Ivendored/logc",
        "-Iexternal/libs7/vendored/logc",

        "-Ivendored/unity",
        "-Iexternal/libs7/vendored/unity",

        "-Ivendored/uthash",
        "-Iexternal/libs7/vendored/uthash",
    ] + select({
        "//:macos": [
            "-Wno-gnu",
            "-std=c11"
        ],
        "//:linux": [
            "-std=gnu11",
            "--pedantic-errors",
        ],
        "//conditions:default": ["-std=c11"],
    }),
    defines = select({
        "//config/host:debug": ["DEBUG_TRACE"],
        "//conditions:default":   []
    }) + select({
        "//config/clibs/link:runtime?": ["CLIBS_LINK_RUNTIME"],
        "//conditions:default":   []
    }) + select({
        "//config/host:macos": ["DSO_EXT=\\\".dylib\\\""],
        "//config/host:linux": [
            "DSO_EXT=\\\".so\\\"",
            "_XOPEN_SOURCE=500", # strdup
            "_DEFAULT_SOURCE"    # dirent DT_* macros
        ],
        "//conditions:default":   ["DSO_EXT=\\\".so\\\""]
    }),
    linkopts = select({
        "//:linux": ["-rdynamic"],
        "//conditions:default": []
    }),
    timeout = "short",
    visibility = ["//test:__subpackages__"]
)
