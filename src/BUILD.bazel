# load("@rules_cc//cc:defs.bzl", "cc_binary")

exports_files(["s7.c", "s7.h"])

###########
cc_library(
    name  = "s7",
    alwayslink = False,
    linkstatic = True,
    srcs  = [
        "s7.c",
        "glob.c", "fs_api.c",
        "shell_api.c"
    ],
    hdrs  = ["s7.h"],
    copts = select({
        "//bzl/host:macos": ["-std=c11", "-Wextra"],
        "//bzl/host:linux": [
            "-std=gnu11", "-Wextra",
            "-Wno-implicit-fallthrough",
            ## warning: 'old_e' may be used uninitialized in this function [-Wmaybe-uninitialized]
            "-Wno-maybe-uninitialized"
        ],
        "//conditions:default": ["-std=c11"],
    }) + [
        "-Wextra",
        "-Wno-unused-parameter",
        # "-pedantic-errors",
        "-Isrc",
        "-Ivendored/linenoise",
    ],
    defines = select({
        "//bzl/host:linux": ["_XOPEN_SOURCE=500"], # strdup
        "//conditions:default":   []
    }) + [
        # "OBAZL_RUNFILES_DIR=external/libs7/src",
        # "OBAZL_RUNFILES_DIR=/Users/gar/.local/share/libs7",
        "WITH_C_LOADER",
        "WITH_SYSTEM_EXTRAS"
    ],
    linkopts = select({
        "//bzl/host:macos": [],
        "//bzl/host:linux": ["-ldl", "-Wl,-export-dynamic"],
        "//conditions:default": []
    }) + [
        "-lm"
    ],
    data = [
        # both loaded at runtime by s7_repl()
        ":c_s7",
        ## scheme sources
        "//scm:srcs",
        "//scm/libc:srcs",
        "//scm/s7:srcs",
    ],
    deps = [
        ":c_s7"
    ],
    visibility = ["//visibility:public"]
)

##########
cc_binary(
    name  = "repl",
    srcs  = [
        "s7_repl.c",
        "s7.c", "s7.h",
        "glob.c", "fs_api.c",
        "shell_api.c",
        "utstring.h"
    ],
    copts = select({
        # strdup is non-standard, not supported on linux in strict c11 mode
        "//bzl/host:macos": ["-std=c11"],
        "//bzl/host:linux": ["-std=gnu11"],
        "//conditions:default": ["-std=c11"],
    }) + [
        "-Wextra",
        "-Wno-unused-parameter",
        # "-Ivendored/linenoise",
        "-O2", "-g",
        "-Isrc",
        "-Ivendored/linenoise",
    ],
    defines = [
        "WITH_MAIN",
        # "WITH_C_LOADER",
        "WITH_SYSTEM_EXTRAS"
    ],
    linkopts = select({
        "//bzl/host:macos": [],
        "//bzl/host:linux": ["-ldl", "-Wl,-export-dynamic"],
        "//conditions:default": []
    }) + [
        "-lm"
    ],
    data = [":c_s7",
            "//scm:srcs",
            "//scm/s7:srcs"],
    deps = [":c_s7"],
    visibility = ["//visibility:public"]
)

###########
cc_binary(
# cc_library(
    name  = "c_s7",  # create libc_s7
    linkshared = True,
    # alwayslink = True,
    srcs  = ["libc_s7.c", "s7.h"],
    copts = select({
        # strdup is non-standard, not supported on linux in strict c11 mode
        "//bzl/host:macos": ["-std=c11"],
        "//bzl/host:linux": ["-std=gnu11", "-Wextra",
                             "-Wno-unused-function"],
        "//conditions:default": ["-std=c11"],
    }) + [
        "-Wextra",
        "-Wno-unused-parameter",
        # "-Ivendored/linenoise",
        "-O2", "-g",
        "-Isrc",
        "-Ivendored/linenoise",
    ],
    defines = [
        "WITH_SYSTEM_EXTRAS"
    ],
    linkopts = select({
        "//bzl/host:macos": [],
        "//bzl/host:linux": ["-ldl", "-Wl,-export-dynamic"],
        "//conditions:default": []
    }) + [
        "-lm"
    ],
    visibility = ["//visibility:public"]
)

################################################################
cc_binary(
    name  = "nrepl",
    srcs  = [
        "nrepl.c",
        "notcurses_s7.c",
        "s7.c", "s7.h",
        "glob.c", "fs_api.c",
        "shell_api.c",
        "utstring.h",

        ## cmake rule in rules_foriegn_cc evidently broken
        # "//imports/notcurses:hdrs",
        # "@notcurses//:hdrs", # for tgt //imports/notcurses
        # "//imports/notcurses:include/notcurses/notcurses.h",
        # '//imports/notcurses:include/notcurses/ncport.h',
        # '//imports/notcurses:include/notcurses/nckeys.h',
        # '//imports/notcurses:include/notcurses/ncseqs.h',
        # '//imports/notcurses:include/notcurses/direct.h'
    ],
    copts = select({
        # strdup is non-standard, not supported on linux in strict c11 mode
        "//bzl/host:macos": ["-std=c11"],
        "//bzl/host:linux": ["-std=gnu11", "-Wl,-export-dynamic"],
        "//conditions:default": ["-std=c11"],
    }) + [
        "-Wextra",
        "-Wno-unused-parameter",
        # "-Ivendored/linenoise",
        "-O2", "-g",


        "-Isrc",
        "-Ivendored/linenoise",
        "-Inotcurses/include",
        "-Inotcurses/notcurses/include",
        "-Iimports/notcurses/include",
        "-Iimports/notcurses/notcurses/notcurses/include",

        "-Iimports/notcurses/hdrs/include",

    ],
    defines = [
        "WITH_MAIN",
        # "WITH_C_LOADER",
        "WITH_SYSTEM_EXTRAS"
    ],
    linkopts = select({
        "//bzl/host:macos": [],
        "//bzl/host:linux": ["-ldl", "-Wl,-export-dynamic"],
        "//conditions:default": []
    }) + [
        "-lm"
    ],
    data = [":c_s7",
            "//scm:srcs",
            "//scm/s7:srcs"],
    deps = [
        ":c_s7",
        # "//imports/notcurses",
        "@notcurses//:notcurses"
    ],
    visibility = ["//visibility:public"]
)


