package(default_visibility = ["//visibility:public"])

load("//:BUILD.bzl",
     "BASE_SRCS", "BASE_DEPS", "BASE_INCLUDE_PATHS",
     "BASE_COPTS", "BASE_DEFINES", "BASE_LINKOPTS")

SRCS          = BASE_SRCS
INCLUDE_PATHS = BASE_INCLUDE_PATHS
DEPS          = BASE_DEPS
COPTS         = BASE_COPTS + INCLUDE_PATHS
DEFINES       = BASE_DEFINES
LINKOPTS      = BASE_LINKOPTS

# WITH_SYSTEM_EXTRAS
  # is_directory_symbol, file_exists_symbol, delete_file_symbol,
  # getenv_symbol, system_symbol,
  # directory_to_list_symbol,
  # file_mtime_symbol

# used in s7.c only:
# WITH_MAIN - enables main() for std repl

# WITH_NOTCURSES - if also WITH_MAIN, includes nrepl.c and excludes
# std repl code, and loads nrepl.scm in s7_repl.
# if WITH_MAIN && WITH_NOTCURSES
#     #include nrepl.c,

##########
# exports_files(["s7.h", "libs7.h"]) ## ???

###########
cc_library(
    name  = "s7_archive",
    linkstatic = True,
    alwayslink = 1,
    srcs  = SRCS + [
        "fs_api.c", # FIXME: replace with cwalk
        "s7.c",
        "libs7.c",
    ],
    deps  = DEPS + ["//vendored/uthash"],
    hdrs  = ["libs7.h", "s7.h"],
    copts = COPTS + [
        "-Wno-unused-parameter",
        "-Ivendored/uthash", "-Iexternal/libs7/vendored/uthash"
    ] + select({
        "//config/host/build:macos?": [
            # allow for warnings in s7.c
            "-Wno-format-pedantic",
        ],
        "//config/host/build:linux?": [
            "-Wno-implicit-fallthrough"
        ],
        "//conditions:default": []
    }),
    data = [
        "//repl:scm",
        "//scm:srcs",
        "//scm/srfi:srcs",
        "//scm/s7:srcs", "s7.h"
    ],
    local_defines = DEFINES + [
        "WITH_SYSTEM_EXTRAS",
        "WITH_C_LOADER"
        # FIXME: if --//config:notcurses
        # "WITH_MAIN",
        # "WITH_NOTCURSES"
    ],
    linkopts = LINKOPTS
)

cc_binary(                      #  libs7.so
    name  = "s7",
    linkshared = True,
    # alwayslink = 1,
    srcs  = SRCS + [
        "fs_api.c", # FIXME: replace with cwalk
        "s7.c",
        "libs7.c",
        "libs7.h", "s7.h",
    ],
    deps  = DEPS + ["//vendored/uthash"],
    copts = COPTS + [
        "-Wno-unused-parameter",
        "-Ivendored/uthash", "-Iexternal/libs7/vendored/uthash"
    ] + select({
        "//config/host/build:macos?": [
            # allow for warnings in s7.c
            "-Wno-format-pedantic",
            "-Wno-unused-parameter"
        ],
        "//config/host/build:linux?": [
            "-Wno-implicit-fallthrough"
        ],
        "//conditions:default": []
    }),
#     copts = COPTS
# [
#         "-Wall",
#         "-Wextra",
#         # "-Werror=pedantic",
#         "-Wno-unused-parameter",
#         "-Isrc",
#         "-Ivendored/logc",
#         "-Iexternal/libs7/vendored/logc",
#         "-Ivendored/uthash",
#         "-Iexternal/libs7/vendored/uthash",
#         "-Iexernal/libs7/src",
#     ] + select({
#         "//:macos": [
#             "-Wno-format-pedantic",
#             "-Wno-gnu",
#             "-std=c11"
#         ],
#         "//:linux": [
#             "-std=gnu11",
#             "-Wno-unused-function",
#             "-Wno-implicit-fallthrough",
#             # "--pedantic-errors",
#             "-fPIC",
#         ],
#         "//conditions:default": ["-std=c11"],
#     }),
    data = [
        "//repl:scm",
        "//scm:srcs", "//scm/s7:srcs", "s7.h"
    ],
    local_defines = DEFINES + [
        "WITH_SYSTEM_EXTRAS",
        "WITH_C_LOADER"
        # FIXME: if --//config:notcurses
        # "WITH_MAIN",
        # "WITH_NOTCURSES"
    ],
    linkopts = LINKOPTS
)
