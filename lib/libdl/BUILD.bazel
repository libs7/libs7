package(default_visibility = ["//visibility:public"])

exports_files(["libdl_clibgen.scm"])

load("//:BUILD.bzl", "SRCS", "DEPS",
     "COPTS", "INCLUDE_PATHS", "DEFINES", "LINKOPTS")

load("//lib:BUILD.bzl", "clibgen_runner", "CLIB_COPTS")

################################################################
cc_library(
    name  = "dl_s7_archive", # emits libdl_s7_archive.a
    linkstatic = True,
    alwayslink = True, # ensure init fn sym available for dlsym
    srcs  = SRCS + [":libdl_s7.c", "//src:s7.h"],
    deps  = DEPS,
    copts = COPTS + INCLUDE_PATHS + CLIB_COPTS,
    linkopts      = LINKOPTS,
    local_defines = DEFINES,
)

cc_binary(
    name  = "dl_s7",  # create libdl_s7.{dylib,so}
    linkshared = True,
    srcs  = SRCS + [":libdl_s7.c", "//src:s7.h"],
    deps  = DEPS,
    copts = COPTS + CLIB_COPTS + INCLUDE_PATHS,
    linkopts      = LINKOPTS,
    local_defines = DEFINES,
)

clibgen_runner(
    name = "libdl_s7_runbin",
    tool = "//lib:clibgen",
    args = ["--script", "lib/libdl/libdl_clibgen.scm"],
    srcs = [":libdl_clibgen.scm", "//lib:clibgen.scm"],
    outs = [":libdl_s7.c"]
)
