load("@bazel_skylib//rules:run_binary.bzl", "run_binary")

package(default_visibility = ["//visibility:public"])

exports_files(["libc_clibgen.scm"])

load("//lib:BUILD.bzl",
     "clibgen_runner",
     "CLIB_COPTS", "CLIB_LINKOPTS", "CLIB_DEFINES")

################################################################
cc_library(
    name  = "gdbm_s7_static", # emits libgdbm_s7_static.a
    linkstatic = 1,
    srcs  = [":libgdbm_s7.c", "//src:s7.h"],
    hdrs  = [":libgdbm_s7.h"],
    deps  = ["@gdbm//:libgdbm"],
    copts = CLIB_COPTS + ["-I$(GENDIR)/external/gdbm/libgdbm/include"],
    linkopts = CLIB_LINKOPTS,
    defines = CLIB_DEFINES,
)

cc_binary(
    name  = "gdbm_s7",  # create libgdbm_s7.{dylib,so}
    linkshared = True,
    srcs  = [":libgdbm_s7.c", "//src:s7.h"],
    deps  = ["@gdbm//:libgdbm"],
    copts = CLIB_COPTS + ["-I$(GENDIR)/external/gdbm/libgdbm/include"],
    linkopts = CLIB_LINKOPTS,
    defines = CLIB_DEFINES,
)

clibgen_runner(
    name = "libgdbm_s7_runbin",
    tool = "//lib:clibgen",
    args = ["--script", "lib/libgdbm/libgdbm_clibgen.scm"],
    srcs = [":libgdbm_clibgen.scm", "//lib:clibgen.scm"],
    outs = [":libgdbm_s7.h", ":libgdbm_s7.c"],
)
