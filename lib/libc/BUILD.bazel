package(default_visibility = ["//visibility:public"])

exports_files(["libc_clibgen.scm"])

load("//:BUILD.bzl", "SRCS", "DEPS",
     "COPTS", "INCLUDE_PATHS", "DEFINES", "LINKOPTS")

load("//lib:BUILD.bzl", "clibgen_runner", "CLIB_COPTS")

################################################################
cc_library(
    name  = "c_s7_archive", # emits libc_s7_archive.a
    linkstatic = True,
    alwayslink = True, # ensure init fn sym available for dlsym
    srcs  = SRCS + [":libc_s7.c", "//src:s7.h"],
    deps  = DEPS,
    copts = COPTS + INCLUDE_PATHS + CLIB_COPTS,
    linkopts = LINKOPTS  + select({
        "//config/host:linux?": ["-lrt"],
        "//conditions:default": []
    }),
    local_defines = DEFINES  + select({
        "//config/host:linux?": ["_POSIX_C_SOURCE=200809",
                                 "_DEFAULT_SOURCE" # strcasecmp in string.h
                                 ],
        "//conditions:default": []
    })
)

cc_binary(
    name  = "c_s7",  # create libc_s7.{dylib,so}
    linkshared = True,
    srcs  = SRCS + [":libc_s7.c", "//src:s7.h"],
    deps  = DEPS,
    copts = CLIB_COPTS,
    linkopts = LINKOPTS  + select({
        "//config/host:linux?": ["-lrt"],
        "//conditions:default": []
    }),
    local_defines = DEFINES  + select({
        "//config/host:linux?": ["_POSIX_C_SOURCE=200809", "_DEFAULT_SOURCE"],
        "//conditions:default": []
    })
)

clibgen_runner(
    name = "libc_s7_runbin",
    tool = "//lib:clibgen",
    args = ["--script", "lib/libc/libc_clibgen.scm"],
    srcs = [":libc_clibgen.scm", "//lib:clibgen.scm"],
    outs = [":libc_s7.c"]
)
