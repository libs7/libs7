package(default_visibility = ["//visibility:public"])

exports_files(["libutf8proc_clibgen.scm"])

load("//:BUILD.bzl",
     "BASE_SRCS", "BASE_DEPS", "BASE_INCLUDE_PATHS",
     "BASE_COPTS", "BASE_DEFINES", "BASE_LINKOPTS")

load("//lib:BUILD.bzl", "clibgen_runner",
     "CLIB_SRCS", "CLIB_INCLUDE_PATHS", "CLIB_COPTS", "CLIB_LINKOPTS")

SRCS          = BASE_SRCS + CLIB_SRCS
INCLUDE_PATHS = BASE_INCLUDE_PATHS + CLIB_INCLUDE_PATHS
COPTS         = BASE_COPTS + CLIB_COPTS + INCLUDE_PATHS
DEPS          = BASE_DEPS
DEFINES       = BASE_DEFINES
LINKOPTS      = BASE_LINKOPTS + CLIB_LINKOPTS

################################################################
cc_library(
    name  = "utf8proc_s7", # provides libutf8proc_s7.a
    linkstatic = True,
    alwayslink = True,
    srcs  = SRCS + [":libutf8proc_s7.c"],
    deps  = DEPS + ["//src:s7",
                    "@utf8proc//:libutf8proc"
                    ],
    copts = COPTS + ["-Wno-unused-parameter"],
    linkopts = LINKOPTS,
    local_defines = DEFINES,
)

cc_shared_library(
    name = "utf8proc_s7_dso",
    shared_lib_name = select({
        "@platforms//os:macos": "libutf8proc_s7.dylib",
        "@platforms//os:linux": "libutf8proc_s7.so",
        # "@platforms//os:windows": "libutf8proc_s7.dll",
        "//conditions:default": "libutf8proc_s7.so"
    }),
    deps = [":utf8proc_s7"]
)

# cc_binary(
#     name  = "utf8proc_s7x",  # create libutf8proc_s7.{dylib,so}
#     linkshared = True,
#     srcs  = SRCS + [":libutf8proc_s7.c"],
#     deps  = DEPS + ["//src:s7", "@utf8proc//:libutf8proc"],
#     copts = COPTS + ["-Wno-unused-parameter"],
#     linkopts = LINKOPTS,
#     local_defines = DEFINES,
# )

clibgen_runner(
    name = "libutf8proc_s7_runbin",
    tool = "//lib:clibgen",
    args = ["--script", "lib/libutf8proc/libutf8proc_clibgen.scm"],
    srcs = [":libutf8proc_clibgen.scm", "//lib:clibgen.scm"],
    outs = [":libutf8proc_s7.c"]
)
