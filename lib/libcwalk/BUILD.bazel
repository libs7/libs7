package(default_visibility = ["//visibility:public"])

exports_files(["libcwalk_clibgen.scm"])

load("//:BUILD.bzl",
     "BASE_SRCS", "BASE_DEPS", "BASE_INCLUDE_PATHS",
     "BASE_COPTS", "BASE_DEFINES", "BASE_LINKOPTS",
     "CWALK_VERSION")

load("//lib:BUILD.bzl", "clibgen_runner",
     "CLIB_SRCS", "CLIB_INCLUDE_PATHS", "CLIB_COPTS", "CLIB_LINKOPTS")

SRCS          = BASE_SRCS + CLIB_SRCS
INCLUDE_PATHS = BASE_INCLUDE_PATHS + CLIB_INCLUDE_PATHS + [
    "-Iexternal/cwalk~{}/include".format(CWALK_VERSION),
]
COPTS         = BASE_COPTS + CLIB_COPTS + INCLUDE_PATHS
DEPS          = BASE_DEPS + ["@cwalk//src:cwalk"]
DEFINES       = BASE_DEFINES
LINKOPTS      = BASE_LINKOPTS + CLIB_LINKOPTS

################################################################
cc_library(
    name  = "cwalk_s7", # emits libcwalk_s7.lo
    linkstatic = True,
    alwayslink = True, # ensure init fn sym available for dlsym
    srcs  = SRCS + [":libcwalk_s7.c"],
    deps  = DEPS,
    copts = COPTS + INCLUDE_PATHS + CLIB_COPTS,
    linkopts      = LINKOPTS,
    local_defines = DEFINES
)

cc_shared_library(
    name  = "cwalk_s7_dso",  # create libcwalk_s7.{dylib,so}
    shared_lib_name = select({
        "@platforms//os:macos": "libcwalk_s7.dylib",
        "@platforms//os:linux": "libcwalk_s7.so",
        # "@platforms//os:windows": "libcwalk_s7.dll",
        "//conditions:default": "libcwalk_s7.so"
    }),
    deps = ["cwalk_s7"]
)

clibgen_runner(
    name = "libcwalk_s7_runbin",
    tool = "//lib:clibgen",
    args = ["--script", "lib/libcwalk/libcwalk_clibgen.scm"],
    srcs = [":libcwalk_clibgen.scm", "//lib:clibgen.scm"],
    outs = [":libcwalk_s7.c"]
)
