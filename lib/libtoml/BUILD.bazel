package(default_visibility = ["//visibility:public"])

exports_files(["libtoml_clibgen.scm"])

load("//:BUILD.bzl", "BASE_SRCS", "BASE_DEPS",
     "BASE_COPTS", "BASE_INCLUDE_PATHS", "BASE_DEFINES", "BASE_LINKOPTS",
     "LIBTOML_CC_VERSION")

load("//lib:BUILD.bzl", "clibgen_runner",
     "CLIB_SRCS", "CLIB_INCLUDE_PATHS", "CLIB_COPTS", "CLIB_LINKOPTS")

SRCS          = BASE_SRCS + CLIB_SRCS
INCLUDE_PATHS = BASE_INCLUDE_PATHS + CLIB_INCLUDE_PATHS
COPTS         = BASE_COPTS + CLIB_COPTS + INCLUDE_PATHS
DEPS          = BASE_DEPS + ["@libtoml_cc//:toml"]
DEFINES       = BASE_DEFINES
LINKOPTS      = BASE_LINKOPTS + CLIB_LINKOPTS

# load("//:BUILD.bzl", "SRCS", "DEPS",
#      "COPTS", "INCLUDE_PATHS", "DEFINES", "LINKOPTS")

# load("//lib:BUILD.bzl",
#      "clibgen_runner",
#      "CLIB_COPTS") # , "CLIB_LINKOPTS", "CLIB_DEFINES")

################################################################
cc_library(
    name  = "toml_s7_archive", # emits libtoml_s7_archive.a
    linkstatic = True,
    alwayslink = True, # ensure init fn sym available for dlsym
    srcs  = SRCS + [
        "libtoml_s7.c",
        "//lib:utils.c",
        "//lib:utils.h",
    ],
    hdrs = ["libtoml_s7.h"], # "toml.h"],
    deps  = DEPS + [
        "//lib:utils",
        # "//vendored/toml",
        ":table", ":array", ":datetime",
        # "@mustachios//vendored/toml",
    ],
    copts = COPTS + [
        "-Isrc",
        "-Iexternal/libs7/src",
        "-Ilib",
        "-Iexternal/libs7/lib",

        # "-Ilib/libtoml",

        # "-Ivendored/toml",
        # "-Iexternal/libs7/vendored/toml",
        "-Iexternal/mustachios/vendored/toml",
    ],
    linkopts = LINKOPTS,
    local_defines = DEFINES
)

cc_binary(
    name  = "toml_s7",  # create libtoml_s7.{dylib,so}
    linkshared = True,
    srcs  = SRCS + [
        ":libtoml_s7.c",
        # "toml.c", "toml.h",
    ],
    deps  = DEPS + [
        "//lib:utils",
        # "//vendored/toml",
        ":table", ":array", ":datetime"
    ],
    copts = COPTS + [
        "-Isrc",
        "-Iexternal/libs7/src",
        "-Ilib/libtoml",
        # "-Ivendored/toml",
        # "-Iexternal/libs7/vendored/toml",
    ],
    linkopts = LINKOPTS,
    local_defines = DEFINES,
)

# clibgen_runner(
#     name = "libtoml_s7_runbin",
#     tool = "//lib:clibgen",
#     args = ["--script", "lib/libtoml/libtoml_clibgen.scm"],
#     srcs = [":libtoml_clibgen.scm", "//lib:clibgen.scm"],
#     outs = [":libtoml_s7.c"]
# )

################################################################
cc_library(
    name  = "array",
    linkstatic = True,
    alwayslink = True, # ensure init fn sym available for dlsym
    srcs  = SRCS + [
        "toml_array_s7.c",
        "libtoml_s7.h",
    ],
    deps  = DEPS + [
        "//src:s7",
        # "//vendored/toml",
    ],
    copts = COPTS + CLIB_COPTS + INCLUDE_PATHS + [
        "-Isrc", "-Iexternal/libs7/src",
        # "-Ivendored/toml", "-Iexternal/libs7/vendored/toml",
    ],
    linkopts = LINKOPTS,
    local_defines = DEFINES
)

cc_library(
    name  = "datetime",
    linkstatic = True,
    alwayslink = True, # ensure init fn sym available for dlsym
    srcs  = SRCS + [
        "toml_datetime_s7.c",
        "libtoml_s7.h",
        # "toml.h",
        # "tomlx.h"
    ],
    deps  = DEPS + [
        "//src:s7",
        # "//vendored/toml",
    ],
    copts = COPTS + [
        "-Isrc", "-Iexternal/libs7/src",
        "-Iexternal/libtoml_cc~{}".format(LIBTOML_CC_VERSION),
        # "-Ivendored/toml", "-Iexternal/libs7/vendored/toml",
    ],
    linkopts = LINKOPTS,
    local_defines = DEFINES
)

cc_library(
    name  = "table",
    linkstatic = True,
    alwayslink = True, # ensure init fn sym available for dlsym
    srcs  = SRCS + [
        "toml_table_s7.c",
        "libtoml_s7.h",
    ],
    deps  = DEPS + [
        "//src:s7",
        # "//vendored/toml",
    ],
    copts = COPTS + [
        "-Isrc", "-Iexternal/libs7/src",
        # "-Ivendored/toml", "-Iexternal/libs7/vendored/toml",
    ],
    linkopts = LINKOPTS,
    local_defines = DEFINES
)

