load("@bazel_skylib//rules:run_binary.bzl", "run_binary")

package(default_visibility = ["//visibility:public"])

exports_files(["libtoml_clibgen.scm"])

load("//lib:BUILD.bzl",
     "clibgen_runner",
     "CLIB_COPTS", "CLIB_LINKOPTS", "CLIB_DEFINES")

################################################################
cc_library(
    name  = "toml_s7_archive", # emits libtoml_s7_archive.a
    linkstatic = True,
    alwayslink = True, # ensure init fn sym available for dlsym
    srcs  = [":libtoml_s7.c", "//src:s7.h"],
    deps  = ["//vendored/tomlc99:toml", "//vendored/logc"],
    copts = CLIB_COPTS + [
        "-Ivendored/logc",
        "-Ivendored/tomlc99",
        "-Iexternal/libs7/vendored/tomlc99",
    ],
    linkopts = CLIB_LINKOPTS,
    defines = CLIB_DEFINES,
)

cc_binary(
    name  = "toml_s7",  # create libtoml_s7.{dylib,so}
    linkshared = True,
    srcs  = [":libtoml_s7.c", "//src:s7.h"],
    deps  = ["//vendored/tomlc99:toml"],
    copts = CLIB_COPTS + [
        "-Ivendored/tomlc99",
        "-Iexternal/libs7/vendored/tomlc99",
    ],
    linkopts = CLIB_LINKOPTS,
    defines = CLIB_DEFINES,
)

# clibgen_runner(
#     name = "libtoml_s7_runbin",
#     tool = "//lib:clibgen",
#     args = ["--script", "lib/libtoml/libtoml_clibgen.scm"],
#     srcs = [":libtoml_clibgen.scm", "//lib:clibgen.scm"],
#     outs = [":libtoml_s7.c"]
# )
