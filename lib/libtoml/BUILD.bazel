package(default_visibility = ["//visibility:public"])

exports_files(["libtoml_clibgen.scm"])

load("//:BUILD.bzl", "COPTS", "LINKOPTS", "DEFINES")
load("//lib:BUILD.bzl",
     "clibgen_runner",
     "CLIB_COPTS", "CLIB_LINKOPTS", "CLIB_DEFINES")

################################################################
cc_library(
    name  = "toml_s7_archive", # emits libtoml_s7_archive.a
    linkstatic = True,
    alwayslink = True, # ensure init fn sym available for dlsym
    srcs  = [
        "//src:s7.h",
        "libtoml_s7.c",
         # "//vendored/tomlc99:toml.c"
        "toml.c", "toml.h"
    ],
    hdrs = ["libtoml_s7.h", "toml.h"],
    deps  = [
        # "//vendored/tomlc99:toml",
        "//vendored/logc",
        ":toml_table", ":toml_array"
    ] + select({
        "//config/profile:dev?": ["//dev"],
        "//conditions:default":  []
    }),
    copts = COPTS + [
        "-Idev",
        "-Iexternal/libs7/dev",
        "-Ilib/libtoml",
        "-Ivendored/logc",
        "-Iexternal/libs7/vendored/logc",
        # "-Ivendored/tomlc99",
        # "-Iexternal/libs7/vendored/tomlc99",
    ] + select({
        "//config/profile:dev?": ["-Idev"],
        "//conditions:default":  []
    }),
    linkopts = LINKOPTS,
    local_defines = DEFINES + CLIB_DEFINES,
)

cc_binary(
    name  = "toml_s7",  # create libtoml_s7.{dylib,so}
    linkshared = True,
    srcs  = [":libtoml_s7.c", "//src:s7.h",
             "toml.c", "toml.h"],
    # deps  = ["//vendored/tomlc99:toml"],
    copts = CLIB_COPTS + [
        # "-Ivendored/tomlc99",
        # "-Iexternal/libs7/vendored/tomlc99",
    ],
    linkopts = CLIB_LINKOPTS,
    local_defines = DEFINES + CLIB_DEFINES,
)

# clibgen_runner(
#     name = "libtoml_s7_runbin",
#     tool = "//lib:clibgen",
#     args = ["--script", "lib/libtoml/libtoml_clibgen.scm"],
#     srcs = [":libtoml_clibgen.scm", "//lib:clibgen.scm"],
#     outs = [":libtoml_s7.c"]
# )

################################################################
cc_library(
    name  = "toml_table",
    linkstatic = True,
    alwayslink = True, # ensure init fn sym available for dlsym
    srcs  = [
        "toml_table_s7.c", "toml_table_s7.h",
        "toml_array_s7.h",
        "libtoml_s7.h",
        "toml.h"
    ],
    deps  = [
        "//src:s7_archive",
        # "//vendored/tomlc99:toml",
        "//vendored/logc"
    ] + select({
        "//config/profile:dev?": ["//dev"],
        "//conditions:default":  []
    }),
    copts = CLIB_COPTS + [
        "-Ivendored/logc",
        "-Iexternal/libs7/vendored/logc",
        # "-Ivendored/tomlc99",
        # "-Iexternal/libs7/vendored/tomlc99",
    ] + select({
        "//config/profile:dev?": ["-Idev", "-Iexternal/libs7/dev"],
        "//conditions:default":  []
    }),
    linkopts = CLIB_LINKOPTS,
    local_defines = DEFINES + CLIB_DEFINES,
)

cc_library(
    name  = "toml_array",
    linkstatic = True,
    alwayslink = True, # ensure init fn sym available for dlsym
    srcs  = [
        "toml_array_s7.c", "toml_array_s7.h",
        "libtoml_s7.h",
        "toml.h"
    ],
    deps  = [
        "//src:s7_archive",
        "//vendored/logc"
    ] + select({
        "//config/profile:dev?": ["//dev"],
        "//conditions:default":  []
    }),
    copts = CLIB_COPTS + [
        "-Ivendored/logc",
        "-Iexternal/libs7/vendored/logc",
        # "-Ivendored/tomlc99",
        # "-Iexternal/libs7/vendored/tomlc99",
    ] + select({
        "//config/profile:dev?": ["-Idev", "-Iexternal/libs7/dev"],
        "//conditions:default":  []
    }),
    linkopts = CLIB_LINKOPTS,
    local_defines = DEFINES + CLIB_DEFINES
)
