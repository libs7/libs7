load("@makeheaders//rules:makeheaders.bzl", "makeheaders")

load("//config/cc:CONFIG.bzl",
     "BASE_COPTS",
     "BASE_DEFINES",
     "LOCAL_DEFINES",
     "BASE_LINKOPTS",
     "define_module_version")

DEPS = [
    "//lib:s7",
    "@gopt//lib:gopt",
    "@liblogc//lib:logc",
    "@uthash//lib:uthash",
]

# TOOLCHAINS = ["//:module_profiles"]

################################################################
## clibgen - builds s7 batch processor, for processing
## lib*_clibgen.scm to generate c sources.
################################################################
exports_files(["clibgen.scm"]) # visibility for data attrib
cc_binary(
    name  = "clibgen",
    srcs  = ["clibgen.c"],
    deps  = DEPS,
    data = [":clibgen.scm"],
    copts =  BASE_COPTS,
    defines = BASE_DEFINES,
    local_defines = LOCAL_DEFINES + [
        "LOCAL_REPO=\\\"{}\\\"".format(repository_name()[1:]),
    ] + define_module_version(),
    # toolchains = TOOLCHAINS,
    visibility = ["//visibility:public"]
)

################################################################
cc_library(
    name = "s7plugin_test_config",
    linkstatic = True,
    srcs = ["s7plugin_test_config.c", ":mkhdrs"],
    hdrs = [":mkhdrs"],
    includes = ["."],
    implementation_deps = DEPS,
    copts = BASE_COPTS, # + ["-I$(GENDIR)/$(@)/plugin"],
    defines = BASE_DEFINES,
    local_defines = LOCAL_DEFINES + [
        "LOCAL_REPO=\\\"{}\\\"".format(repository_name()[1:]),
    ] + define_module_version(),
    # toolchains = TOOLCHAINS,
    visibility = ["//visibility:public"]
)

makeheaders(
    name = "mkhdrs",
    hdrs_srcs = ["s7plugin_test_config.c"],
)
