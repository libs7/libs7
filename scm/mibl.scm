(format *stderr* "LOADING mibl.scm~%")

(load "utils.scm") ;; if-let
(load "srfi.scm")

(define (dune->mibl data)
  (format #t "Data: ~A~%" data)
  (if (alist? data)
      (let* ((mibl (map (lambda (pr)
                          (format #t "Pr: ~A~%" pr)
                          (if (pair? pr)
                              (cons (symbol->keyword (car pr))
                                    (dune->mibl (cdr pr)))
                              pr))
                        data))
             ;; (table (fold (lambda (item accum)
             ;;                (if-let ((x (assoc (car item) accum)))
             ;;                        (set! (cdr x) (cons (cdr item)
             ;;                                            (cdr x)))
             ;;                        (cons item accum)))
             ;;              '()
             ;;              mibl))
             )
        mibl)
      (car data)))

;; (if (pair? (cadr pr))
;;     (let ((-cdr (dune->mibl (cdr pr))))
;;       (if (and (pair? -cdr)
;;                (pair? (cdr -cdr))
;;                (> (length -cdr) 1))
;;           -cdr ;; (car -cdr)
;;           (car -cdr) #;(car -cdr)))
;;     (cdr pr))
